plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.budgetku'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'idea'

checkstyle {
    config = resources.text.fromFile(configDirectory.file("checkstyle.xml"))
    maxWarnings = 0  // Fail the build if there are any warnings
    sourceSets = []  // Do not run checkstyle on gradle build/check
    toolVersion = "8.42"
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.12.3'

    compileOnly 'org.projectlombok:lombok'
    compile 'org.webjars:bootstrap:4.1.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.0'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.3.9.RELEASE'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*Application**'])
        }))
    }
    dependsOn test
    reports {
        xml.enabled true
        html.enabled true
        xml.destination file("${buildDir}/jacoco/jacoco.xml")
        html.destination file("${buildDir}/jacocoHtml")
    }
}
